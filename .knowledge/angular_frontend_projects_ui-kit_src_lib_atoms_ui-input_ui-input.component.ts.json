{"is_source_file": true, "format": "TypeScript (Angular component)", "description": "This file defines an Angular standalone component named UiInputComponent, which provides a customizable input field with support for variants, slots via content projection, and error display. It is styled with embedded CSS and includes inputs for placeholders, disabled state, variant types, error messages, and value binding, with an output event for value changes.", "external_files": ["node_modules/@angular/core", "node_modules/@angular/common"], "external_methods": ["EventEmitter", "Component", "Input", "Output", "ChangeDetectionStrategy"], "published": ["UiInputComponent"], "classes": [{"name": "UiInputComponent", "description": "An Angular standalone component that encapsulates an input field with configurable variants, error message, prefix/suffix slots, and change detection."}], "methods": [{"name": "emitChange", "description": "Internal method to emit the new value when the input changes."}, {"name": "onInput", "description": "Event handler for the input's native input event, processes the event and triggers value emission."}], "calls": ["this.emitChange", "this.valueChange.emit"], "search-terms": ["Angular standalone input component", "UI input with slots and variants", "TypeScript Angular input component", "Angular component with error display", "Content projection in Angular"], "state": 2, "file_id": 35, "knowledge_revision": 131, "git_revision": "", "revision_history": [{"71": ""}, {"109": ""}, {"117": ""}, {"131": ""}], "ctags": [{"_type": "tag", "name": "UiInputComponent", "path": "/home/kavia/workspace/code-generation/elegant-dashboard-platform-2609-2619/angular_frontend/projects/ui-kit/src/lib/atoms/ui-input/ui-input.component.ts", "pattern": "/^export class UiInputComponent {$/", "language": "TypeScript", "kind": "class"}, {"_type": "tag", "name": "disabled", "path": "/home/kavia/workspace/code-generation/elegant-dashboard-platform-2609-2619/angular_frontend/projects/ui-kit/src/lib/atoms/ui-input/ui-input.component.ts", "pattern": "/^  @Input() disabled = false;$/", "language": "TypeScript", "kind": "property", "scope": "UiInputComponent", "scopeKind": "class"}, {"_type": "tag", "name": "placeholder", "path": "/home/kavia/workspace/code-generation/elegant-dashboard-platform-2609-2619/angular_frontend/projects/ui-kit/src/lib/atoms/ui-input/ui-input.component.ts", "pattern": "/^  @Input() placeholder = '';$/", "language": "TypeScript", "kind": "property", "scope": "UiInputComponent", "scopeKind": "class"}, {"_type": "tag", "name": "target", "path": "/home/kavia/workspace/code-generation/elegant-dashboard-platform-2609-2619/angular_frontend/projects/ui-kit/src/lib/atoms/ui-input/ui-input.component.ts", "pattern": "/^    const target: any = evt?.target as any;$/", "language": "TypeScript", "kind": "constant"}, {"_type": "tag", "name": "variant", "path": "/home/kavia/workspace/code-generation/elegant-dashboard-platform-2609-2619/angular_frontend/projects/ui-kit/src/lib/atoms/ui-input/ui-input.component.ts", "pattern": "/^  @Input() variant: 'search' | 'auth' = 'search';$/", "language": "TypeScript", "kind": "property", "scope": "UiInputComponent", "scopeKind": "class"}], "hash": "24a588cef9e60e73ad2f0b4e7bc42873", "format-version": 4, "code-base-name": "angular_frontend", "filename": "angular_frontend/projects/ui-kit/src/lib/atoms/ui-input/ui-input.component.ts", "fields": [{"name": "@Input() disabled = false;", "scope": "UiInputComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Input() placeholder = '';", "scope": "UiInputComponent", "scopeKind": "class", "description": "unavailable"}, {"name": "@Input() variant: 'search' | 'auth' = 'search';", "scope": "UiInputComponent", "scopeKind": "class", "description": "unavailable"}]}